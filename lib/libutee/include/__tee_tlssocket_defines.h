#ifndef ____TEE_TLSSOCKET_DEFINES_H
#define ____TEE_TLSSOCKET_DEFINES_H

#define TEE_SOCKET_TLS_API_MAJOR_VERSION       (1)
#define TEE_SOCKET_TLS_API_MINOR_VERSION       (1)
#define TEE_SOCKET_TLS_API_MAINTENANCE_VERSION (0)
#define TEE_SOCKET_TLS_API_1_1
#define TEE_SOCKET_TLS_API_VERSION                         \
	(TEE_SOCKET_TLS_API_MAJOR_VERSION << 24) +         \
		(TEE_SOCKET_TLS_API_MINOR_VERSION << 16) + \
		(TEE_SOCKET_TLS_API_MAINTENANCE_VERSION << 8)

/* Protocol identifier */
#define TEE_ISOCKET_PROTOCOLID_TLS 0x67

/* Instance specific errors */
#define TEE_ISOCKET_TLS_ERROR_REJECTED_SUITE	0xF1030001
#define TEE_ISOCKET_TLS_ERROR_VERSION		0xF1030002
#define TEE_ISOCKET_TLS_ERROR_UNSUPPORTED_SUITE 0xF1030003
#define TEE_ISOCKET_TLS_ERROR_HANDSHAKE		0xF1030004
#define TEE_ISOCKET_TLS_ERROR_AUTHENTICATION	0xF1030005

/* Instance specific ioctl functions */
#define TEE_TLS_BINDING_INFO 0x67000001

/* TLS handshake definitions */
#define TEE_TLS_HANDSHAKE_TYPE_SERVER_AUTHENTICATE_ONLY 0x00000000
#define TEE_TLS_HANDSHAKE_TYPE_MUTUAL_AUTHENTICATED	0x00000001
#define TEE_TLS_HANDSHAKE_TYPE_PSK_AUTHENTICATED	0x00000002
#define TEE_TLS_HANDSHAKE_TYPE_RESUMED			0x00000004

#define TEE_SOCKET_TLS_SUPPORTED_HANDSHAKES \
	TEE_TLS_HANDSHAKE_TYPE_SERVER_AUTHENTICATE_ONLY

/* TLS server authentication definitions */
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_NONE	    0x00000000
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_PDC	    0x00000001
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_X509_CERT    0x00000002
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_CERT_PINNING 0x00000004
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_PSK	    0x00000008
#define TEE_TLS_AUTH_REMOTE_CREDENTIAL_SRP	    0x00000010

#define TEE_SOCKET_TLS_SUPPORTED_SERVER_AUTH \
	TEE_TLS_AUTH_REMOTE_CREDENTIAL_X509_CERT

/* TLS client authentication definitions */
#define TEE_TLS_AUTH_LOCAL_CREDENTIAL_NONE 0x00000000
#define TEE_TLS_AUTH_LOCAL_CREDENTIAL_X509 0x00000001
#define TEE_TLS_AUTH_LOCAL_CREDENTIAL_PSK  0x00000002
#define TEE_TLS_AUTH_LOCAL_CREDENTIAL_SRP  0x00000004

#define TEE_SOCKET_TLS_SUPPORTED_CLIENT_AUTH TEE_TLS_AUTH_LOCAL_CREDENTIAL_NONE

/* MBEDTLS configuration */

/*
 * When wrapping using TEE_BigInt to represent a mbedtls_mpi we can only
 * use 32-bit arithmetics.
 */
#define MBEDTLS_HAVE_INT32

#define MBEDTLS_CIPHER_MODE_CBC
#define MBEDTLS_PKCS1_V15

#define MBEDTLS_CIPHER_C
#define MBEDTLS_DES_C
#define MBEDTLS_AES_C
#define MBEDTLS_NIST_KW_C
#define MBEDTLS_POLY1305_C
#define MBEDTLS_CHACHA20_C
#define MBEDTLS_CHACHAPOLY_C

#define MBEDTLS_SHA1_C
#define MBEDTLS_SHA256_C
#define MBEDTLS_MD_C
#define MBEDTLS_MD5_C

#define MBEDTLS_CTR_DRBG_C
#define MBEDTLS_ENTROPY_C
#define MBEDTLS_NO_PLATFORM_ENTROPY

#define MBEDTLS_BIGNUM_C
#define MBEDTLS_GENPRIME
#define MBEDTLS_RSA_C
#define MBEDTLS_ECDH_C
#define MBEDTLS_ECDSA_C
#define MBEDTLS_ECP_C
#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
#define MBEDTLS_ECP_DP_SECP256R1_ENABLED
#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
#define MBEDTLS_ECP_DP_BP256R1_ENABLED
#define MBEDTLS_ECP_DP_BP384R1_ENABLED
#define MBEDTLS_ECP_DP_BP512R1_ENABLED
#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
#define MBEDTLS_ECP_DP_SECP256K1_ENABLED

#define MBEDTLS_PK_C
#define MBEDTLS_PK_PARSE_C
#define MBEDTLS_PK_WRITE_C
#define MBEDTLS_OID_C
#define MBEDTLS_ASN1_PARSE_C
#define MBEDTLS_ASN1_WRITE_C
#define MBEDTLS_X509_CRT_PARSE_C
#define MBEDTLS_X509_CRT_WRITE_C
#define MBEDTLS_X509_CSR_PARSE_C
#define MBEDTLS_X509_CSR_WRITE_C
#define MBEDTLS_X509_CREATE_C
#define MBEDTLS_X509_CHECK_KEY_USAGE
#define MBEDTLS_X509_USE_C
#define MBEDTLS_BASE64_C
#define MBEDTLS_CERTS_C
#define MBEDTLS_PEM_PARSE_C
#define MBEDTLS_PEM_WRITE_C

#define MBEDTLS_SSL_TLS_C
#define MBEDTLS_SSL_PROTO_TLS1_2
#define MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
#define MBEDTLS_PLATFORM_C
#define MBEDTLS_DEBUG_C
#define MBEDTLS_SSL_CLI_C

#include <mbedtls/check_config.h>

#endif /*____TEE_TLSSOCKET_DEFINES_H*/
